{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","defaultProps","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","placeholder","NewText","toUpperCase","toLowerCase","split","join","length","App","setmode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e5da3107.chunk.js","sourcesContent":["import React from 'react'\r\n// import Proptypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"  />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Case Converter'\r\n};","import React, { useState } from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    // Upper case Code\r\n    const uppercase = () => {\r\n        let NewText = text.toUpperCase();\r\n        setText(NewText);\r\n    }\r\n    // lower case code \r\n    const lowercase = () => {\r\n        let NewText = text.toLowerCase();\r\n        setText(NewText);\r\n    }\r\n    // Clear all\r\n    const Clearall = () => {\r\n        let NewText = '';\r\n        setText(NewText);\r\n    }\r\n    // remove Extra Space \r\n    const Extraspace = () => {\r\n        let NewText = text.split(/[ ]+/);\r\n        setText(NewText.join(\" \"));\r\n    }\r\n\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h2>{props.heading}</h2>\r\n\r\n                <textarea className=\"form-control texthere\" rows=\"6\" value={text} onChange={handleOnchange} style={{\r\n                    backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\r\n                    color: props.mode === 'dark' ? 'white' : '#042743'\r\n                }} placeholder=\"Enter Your Text\"  ></textarea>\r\n\r\n                <div className=\"btns\">\r\n                    {/* CONVERT TO UPPERCASE  */}\r\n\r\n                    <button className=\"upbtn btn btn-primary my-3\" onClick={uppercase}>Convert To Upper Case</button>\r\n\r\n                    {/* CONVERT TO LOWERCASE  */}\r\n\r\n                    <button className=\"lowbtn btn btn-primary my-3 mx-4\" onClick={lowercase}>Convert To Lower Case</button>\r\n\r\n                    <button className=\"lowbtn btn btn-primary my-3 mx-4\" onClick={Clearall}>Clear All</button>\r\n\r\n                    <button className=\"lowbtn btn btn-primary my-3 mx-4\" onClick={Extraspace}>Remove Extra Spaces</button>\r\n\r\n                    {/* FIRST LETTER CAPITALIZE  */}\r\n\r\n                    {/* <button className=\"btn btn-primary my-3 mx-4\" onClick={titleCase}>Capitalize First Letter</button> */}\r\n\r\n                    <CopyToClipboard text={text}>\r\n                        <button className=\"copybtn btn btn-secondary my-3 mx-4\">Copy To Clipboard</button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            </div>\r\n            <div className=\"container numchar my-2\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h6>{text.split(\" \").length} Words and {text.length} Characters</h6>\r\n            </div>\r\n            <div className=\"container numchar my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h6> It may take average of {3.16 * text.split(\" \").length} seconds to read this text</h6>\r\n            </div>\r\n\r\n            <div className=\"container my-4 preview\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h3>Preview</h3>\r\n                <div className=\"container my-3\">\r\n                    <p>{text.length>0 ? text:\"Enter Something To Preview Here\"}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const toggleMode=()=>{\n    if (mode==='light') {\n      setmode('dark')\n      document.body.style.backgroundColor ='#042743';\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor ='white';\n    }\n\n  }\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container my-4\">\n        <TextForm heading=\"Enter Your Text Here\" mode={mode}  />\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}