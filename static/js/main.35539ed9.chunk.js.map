{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","onClick","toggleMode","id","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","placeholder","disabled","length","NewText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","filter","element","Alert","height","alert","role","msg","defaultProps","App","setmode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35539ed9.chunk.js","sourcesContent":["import React from 'react'\r\n// import Proptypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/caseconverter\">{props.title}</a>\r\n        \r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"  />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Case Converter'\r\n};","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    // Upper case Code\r\n    const uppercase = () => {\r\n        let NewText = text.toUpperCase();\r\n        setText(NewText);\r\n        props.showAlert(\"Converted To UpperCase\", \"Success\")\r\n\r\n    }\r\n    // lower case code \r\n    const lowercase = () => {\r\n        let NewText = text.toLowerCase();\r\n        setText(NewText);\r\n        props.showAlert(\"Converted To LowerCase\", \"Success\")\r\n\r\n    }\r\n    // Clear all\r\n    const Clearall = () => {\r\n        let NewText = '';\r\n        setText(NewText);\r\n        props.showAlert(\"Text Cleared\", \"Success\")\r\n\r\n    }\r\n    // remove Extra Space \r\n    const Extraspace = () => {\r\n        let NewText = text.split(/[ ]+/);\r\n        setText(NewText.join(\" \"));\r\n        props.showAlert(\"Extraspaces Cleared\", \"Success\")\r\n\r\n    }\r\n\r\n    const copytext = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied To Clipboard\", \"Success\")\r\n\r\n    }\r\n\r\n\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\"  style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h2>{props.heading}</h2>\r\n\r\n                <textarea className=\"form-control texthere\" id=\"mybox\" rows=\"6\" value={text} onChange={handleOnchange} style={{\r\n                    backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\r\n                    color: props.mode === 'dark' ? 'white' : '#042743'\r\n                }} placeholder=\"Enter Your Text\"  ></textarea>\r\n\r\n                {/* CONVERT TO UPPERCASE  */}\r\n\r\n                <button disabled={text.length===0} className=\"upbtn btn btn-primary my-1 mx-1\" onClick={uppercase}>Convert To Upper Case</button>\r\n\r\n                {/* CONVERT TO LOWERCASE  */}\r\n\r\n                <button disabled={text.length===0} className=\"lowbtn btn btn-primary my-1 mx-1\" onClick={lowercase}>Convert To Lower Case</button>\r\n\r\n                <button disabled={text.length===0} className=\"lowbtn btn btn-primary my-1 mx-1\" onClick={Clearall}>Clear All</button>\r\n\r\n                <button disabled={text.length===0} className=\"lowbtn btn btn-primary my-1 mx-1 \" onClick={Extraspace}>Remove Extra Spaces</button>\r\n\r\n                <button disabled={text.length===0} className=\"lowbtn btn btn-light my-1 mx-1 \" onClick={copytext} >Copy To Clipboard</button>\r\n\r\n                {/* FIRST LETTER CAPITALIZE \r\n\r\n                <button className=\"btn btn-primary my-3 mx-4\" onClick={titleCase}>Capitalize First Letter</button>  */}\r\n\r\n            </div>\r\n            <div className=\"container numchar my-2\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h6>{text.split(/\\s+/).filter((element)=>{\r\n                    return element.length!==0\r\n                }).length} Words and {text.length} Characters</h6>\r\n            </div>\r\n            <div className=\"container numchar my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h6> It may take average of {3.16 * text.split(\" \").length} seconds to read this text</h6>\r\n            </div>\r\n\r\n            <div className=\"container my-4 preview\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h3>Preview</h3>\r\n                <div className=\"container my-3\">\r\n                    <p>{text.length > 0 ? text : \"Nothing To Preview\"}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n            \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode=()=>{\n    if (mode==='light') {\n      setmode('dark')\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark Mode Enabled\",\"Success\")\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor ='white';\n      showAlert(\"Light Mode Enabled\",\"Success\")\n    }\n\n  }\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-4\">\n        <TextForm heading=\"Enter Your Text Here\" mode={mode} showAlert={showAlert}  />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}